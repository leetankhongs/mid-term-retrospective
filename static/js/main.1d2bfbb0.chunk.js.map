{"version":3,"sources":["constants/config.js","until/callAPI.js","components/confirmDialog/index.js","components/snackbar/index.js","pages/BoardPage/boardItem/index.js","pages/BoardPage/inputBoard/index.js","pages/BoardPage/boardList/index.js","components/header/index.js","until/callAuth.js","pages/BoardPage/index.js","pages/BoardDetailPage/taskItem/index.js","pages/BoardDetailPage/inputTask/index.js","pages/BoardDetailPage/columnItem/index.js","pages/BoardDetailPage/columnList/index.js","pages/BoardDetailPage/taskList/index.js","pages/BoardDetailPage/boardHeader/index.js","pages/BoardDetailPage/index.js","google.svg","pages/LoginPage/index.js","pages/SignUpPage/index.js","pages/AccountView/Profile/index.js","pages/AccountView/ProfileDetail/index.js","pages/AccountView/UpdateProfile/index.js","pages/AccountView/ChangePassword/index.js","pages/AccountView/Tags/index.js","pages/AccountView/index.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","callApi","endpoint","method","body","axios","url","Config","data","catch","err","PaperComponent","props","handle","cancel","Paper","ConfirmDialog","title","content","onChoose","useState","open","setOpen","useEffect","Dialog","onClose","aria-labelledby","DialogTitle","style","cursor","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","onClick","color","Alert","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","reset","type","message","classes","React","isOpen","setIsOpen","handleClose","event","reason","className","Snackbar","autoHideDuration","severity","BoardItem","taskNumber","setTaskNumber","copied","setCopied","isSubmit","setIsSubmit","APICaller","then","res","length","day","Date","value","onDelete","Card","border","CardActionArea","to","process","textDecoration","CardContent","Typography","gutterBottom","component","name","Grid","container","justify","item","getDate","getMonth","getFullYear","CardActions","text","window","location","href","onCopy","size","onChangeDelete","InputBoard","textField","setTextField","success","setSuccess","fullWidth","height","disableBackdropClick","TextField","margin","label","onChange","target","user","userID","onReset","BoardList","boards","setBoards","isReset","setIsReset","isDelete","setIsDelete","handleDelete","changeDelete","md","xs","Box","mr","mt","map","board","_id","date","flexGrow","Header","anchorEl","setAnchorEl","Boolean","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","pathname","state","localStorage","setItem","callAuthenticationAPI","contentHeader","get","headers","BoardPage","isLogin","setIsLogin","isAuth","setIsAuth","setUserID","Authorization","JSON","parse","getItem","userId","console","log","TaskItem","isEdit","setIsEdit","taskInfor","description","setContent","newBorder","background","handleClick","confirm","onResetData","noValidate","autoComplete","backgroundColor","padding","direction","alignItems","InputTask","onCloseInputTask","display","ColumnItem","tasks","setTasks","indexAddColumn","setIndex","setReset","infor","boardID","handleResetData","square","align","columnType","mb","task","dex","ColumnList","columns","setColumns","column","TaskList","BoardHeader","boardName","setBoardName","setText","callAPI","handleOpenEditBoardName","placeholder","BoardDetail","setID","URLSearchParams","search","paper","flexDirection","avatar","palette","secondary","main","form","submit","button","SignIn","setisLogin","email","password","setUser","error","setError","handleChange","Container","maxWidth","CssBaseline","Avatar","required","FormControlLabel","control","Checkbox","preventDefault","stringify","access_token","startIcon","src","google","alt","SignUp","firstName","lastName","confirmPassword","agreeTerm","acount","setAcount","checked","onSubmit","sm","fontStyle","fontSize","Profile","dateText","Divider","ProfileDetails","CardHeader","helperText","disabled","phone","UpdateProfile","values","setValues","subheader","justifyContent","p","ChangePassword","oldPassword","newPassword","tabs","borderRight","divider","VerticalTabs","setValue","Tabs","orientation","newValue","onChangeValue","Tab","maxwidth","TabPanel","children","index","other","role","hidden","Account","result","lg","ProfileDetail","routes","path","exact","App","route","showContentMenus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d2bfbb0.chunk.js","sourcesContent":["export const API_URL = 'https://retrospective-midterm.herokuapp.com'\r\n","import axios from 'axios';\r\nimport * as Config from '../constants/config'\r\n\r\nconst callApi = (endpoint, method = 'GET', body) => {\r\n    return axios({\r\n        method: method,\r\n        url: Config.API_URL + '/' + endpoint,\r\n        data: body\r\n    }).catch(err => {\r\n        throw err;\r\n    });\r\n}\r\n\r\nexport default callApi;\r\n\r\n","import {useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function ConfirmDialog({title, content, onChoose}) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    setOpen(true);\r\n  }, [onChoose])\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={()=>{setOpen(false); onChoose(false);}} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={()=> {setOpen(false); onChoose(true);}} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({reset, open, type, message }) {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = React.useState(open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open);\r\n  }, [open, reset])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={type}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\nimport ConfirmDialog from './../../../components/confirmDialog/index';\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\nconst BoardItem = (props) => {\r\n\r\n    const [taskNumber, setTaskNumber] = useState(0);\r\n    const [copied, setCopied] = useState(null);\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        APICaller('tasks/board?id=' + props.id, 'GET', null).then(res => {\r\n            setTaskNumber(res.data.length);\r\n        });\r\n    }, [props.id]);\r\n    const day = new Date(props.day);\r\n\r\n    const handleChoose = (value) => {\r\n        if (value) {\r\n            APICaller('boards/' + props.id, 'DELETE', null).then(res => {\r\n                props.onDelete();\r\n                setIsSubmit(false);\r\n            });\r\n            \r\n        }\r\n        setIsSubmit(false);\r\n    }\r\n\r\n    const handleClickToDelete =()=> {\r\n        props.onChangeDelete();\r\n        setIsSubmit(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isSubmit ? <ConfirmDialog title=\"Delete board\" content=\"Do you want to delete this board?\" onChoose={handleChoose} /> : <></>}\r\n            {copied === true ? <CustomizedSnackbars open={true} type=\"success\" message=\"Copied\" /> : <></>}\r\n            {copied === false ? <CustomizedSnackbars open={true} type=\"success\" message=\"Copied\" /> : <></>}\r\n            <Card style={{ border: \"1px solid black\" }}>\r\n                <CardActionArea>\r\n                    <Link to={process.env.PUBLIC_URL + '/boards?id=' + props.id} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                        <CardContent >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {props.name}\r\n                            </Typography>\r\n                            <Grid container justify=\"space-between\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {day.getDate() + \"/\" + (day.getMonth() + 1) + \"/\" + day.getFullYear()}\r\n\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {taskNumber} tasks\r\n                                </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Link>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Grid container justify=\"space-between\">\r\n                        <Grid item>\r\n                            <CopyToClipboard text={window.location.href + props.url} onCopy={() => { setCopied(!copied) }}>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    URL\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button size=\"small\" color=\"primary\" onClick = {handleClickToDelete}>\r\n                                Delete\r\n                        </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card >\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BoardItem;","import { useState } from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions } from '@material-ui/core';\r\n\r\nimport APICaller from '../../../until/callAPI'\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\nconst InputBoard = (props) => {\r\n    const [textField, setTextField] = useState(\"\");\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        setSuccess(false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        if (textField !== \"\") {\r\n            APICaller(\"boards\", \"POST\", {\r\n                name: textField,\r\n                user: props.userID\r\n            }).then(res => {props.onReset(); setSuccess(true)})\r\n\r\n            setTextField(\"\")\r\n            setOpen(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setTextField(value);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? <CustomizedSnackbars open={true} type=\"success\" message=\"Thêm thành công\" /> : <></>}\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} fullWidth={true} style={{ height: \"150px\" }}>\r\n                Add Board\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick = {true}>\r\n                \r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={textField}\r\n                        onChange={handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                            </Button>\r\n                    <Button onClick={handleClick} color=\"primary\">\r\n                        Subscribe\r\n                            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputBoard;","import React, { useState, useEffect } from 'react';\r\nimport BoardItem from './../boardItem/index'\r\nimport { Grid, Box } from '@material-ui/core';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\nimport InputBoard from '../inputBoard/index'\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\n\r\n\r\nconst BoardList = (props) => {\r\n    const [boards, setBoards] = useState([]);\r\n    const [isReset, setIsReset] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n\r\n    useEffect(() => {\r\n        APICaller('boards/user/' +  props.userID, 'GET', null).then(res => {\r\n            setBoards(res.data)\r\n        });\r\n    }, [isReset, props.userID]);\r\n\r\n\r\n    const handleReset = () => {\r\n        setIsReset(!isReset)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setIsReset(!isReset)\r\n        setIsDelete(true)\r\n    }\r\n\r\n    const changeDelete = () =>{\r\n        setIsDelete(false)\r\n    }\r\n\r\n    const createBoardList = () => {\r\n        return (\r\n            boards.map(board => {\r\n                return (\r\n                    <Grid item md={2} xs={12} key={board._id}>\r\n                        <Box mr={2} mt={2}>\r\n                            <BoardItem name={board.name} id={board._id} day={board.date} url={board.url} onDelete = {handleDelete} onChangeDelete={changeDelete} />\r\n                        </Box>\r\n                    </Grid>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: \"10px\" }}>\r\n            {isDelete? <CustomizedSnackbars open={true} type=\"success\" message=\"Xóa bảng thành công\" />: <></>}\r\n\r\n            <h1>Board List</h1>\r\n            <Grid container>\r\n                <Grid item md={2} xs={12}>\r\n                    <Box mr={2} mt={2}>\r\n                        <InputBoard onReset={handleReset} userID = {props.userID}/>\r\n                    </Box>\r\n                </Grid>\r\n                {createBoardList()}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = ()=>{\r\n        localStorage.setItem('token', null);\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Link to={process.env.PUBLIC_URL + '/'} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                            <GroupIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Retrospective\r\n                    </Typography>\r\n                    {\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n\r\n                                <Link to={process.env.PUBLIC_URL + '/profile'} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                                    <MenuItem >Profile</MenuItem>\r\n                                </Link>\r\n                                <Link to={{\r\n                                        pathname: process.env.PUBLIC_URL + '/login',\r\n                                        state: {\r\n                                            type: 'success',\r\n                                            message: \"Successfully logged out!\",\r\n                                            open: true\r\n                                        }}}\r\n                                         style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                                    <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n                                </Link>\r\n                            </Menu>\r\n                        </div>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\nimport * as Config from '../constants/config'\r\n\r\nconst callAuthenticationAPI = (endpoint, contentHeader) => {\r\n    return axios.get(Config.API_URL + '/' + endpoint, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + contentHeader\r\n        }\r\n    });\r\n}\r\n\r\nexport default callAuthenticationAPI;","import { useEffect, useState } from 'react'\r\n\r\nimport BoardList from './boardList/index'\r\nimport Header from './../../components/header/index'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Authorization from './../../until/callAuth'\r\n\r\nconst BoardPage = () => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const [userID, setUserID] = useState(false);\r\n    useEffect(() => {\r\n        Authorization('profile', JSON.parse(localStorage.getItem('token')))\r\n            .then(res => { setUserID(res.data.userId); setIsLogin(true); setIsAuth(true) })\r\n            .catch(err => { console.log(\"Lỗi\"); setIsLogin(false); setIsAuth(true) })\r\n    }, []);\r\n\r\n    if (!isAuth) return <></>;\r\n\r\n    if (!isLogin) return <Redirect to={{\r\n        pathname: process.env.PUBLIC_URL + '/login',\r\n        state: {\r\n            type: 'error',\r\n            message: \"You must login!\",\r\n            open: true\r\n        }\r\n    }} />\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <BoardList userID = {userID}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BoardPage;","import { useState } from 'react';\r\nimport { IconButton, Grid, TextField, Button } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\n\r\nconst TaskItem = (props) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [content, setContent] = useState(props.taskInfor.description);\r\n    const newBorder = \"5px solid \" + props.background;\r\n    \r\n    const handleClick = () => {\r\n\r\n        if (confirm(\"Bạn có muốn xóa board này không?\")) //eslint-disable-line\r\n            APICaller('tasks/' + props.taskInfor._id, 'DELETE', null).then(res => {\r\n                props.onResetData();\r\n            })\r\n\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const handleDoEditTask = () =>{\r\n        APICaller('tasks/edit/' + props.taskInfor._id, 'POST', {\r\n            description: content\r\n        }).then(res => {\r\n            setIsEdit(false);\r\n            props.onResetData();\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setContent(event.target.value);\r\n    }\r\n\r\n    if (isEdit) return (\r\n        <Grid container justify=\"center\" style={{ border: newBorder }} >\r\n            <Grid item xs={11} >\r\n                <form noValidate autoComplete=\"off\"  >\r\n                    <TextField id=\"textField\" value={content}  label=\"Description\" variant=\"outlined\" size=\"small\" fullWidth style={{ marginTop: \"5px\" }} onChange ={handleChange}/>\r\n                </form>\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n                <Grid container justify=\"space-between\" style={{ margin: \"4px\" }}>\r\n                    <Grid item  >\r\n                        <Button variant=\"contained\" size=\"small\" style={{ margin: \"2px\", backgroundColor: \"#76ff03\" }} onClick={handleDoEditTask}>\r\n                            Done\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton component=\"span\" size=\"small\" style={{ margin: \"2px\" }} onClick={handleClick}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n\r\n    return (\r\n\r\n        <Grid container style={{ backgroundColor: props.background, padding: \"5px\" }}>\r\n            <Grid item >\r\n                {props.taskInfor.description}\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"baseline\" >\r\n                <Grid item>\r\n                    <IconButton component=\"span\" size=\"small\" onClick={handleEditClick}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item >\r\n                    <IconButton component=\"span\" size=\"small\" onClick={handleClick}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default TaskItem;","import { useState } from 'react';\r\nimport { Button, IconButton, Grid, TextField } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\n\r\n\r\nconst InputTask = (props) => {\r\n    const newBorder = \"5px solid \" + props.color;\r\n    const [textField, setTextField] = useState(\"\");\r\n\r\n    const handleClick = (event) => {\r\n        if (textField !== \"\") {\r\n            APICaller(\"tasks\", \"POST\", {\r\n                type: props.value,\r\n                description: textField,\r\n                board: props.board\r\n            }).then(res => {\r\n                props.onCloseInputTask();\r\n                props.onResetData();\r\n            })\r\n\r\n            setTextField(\"\")\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setTextField(value);\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{ border: newBorder }} >\r\n            <Grid item xs = {11} >\r\n                <form noValidate autoComplete=\"off\"  >\r\n                    <TextField id=\"textField\" value={textField} onChange={handleChange} label=\"Description\" variant=\"outlined\" size=\"small\" fullWidth style={{ marginTop: \"5px\" }} />\r\n                </form>\r\n            </Grid>\r\n            <Grid item xs = {11}>\r\n                <Grid container justify=\"space-between\" style = {{margin: \"4px\"}}>\r\n                    <Grid item  >\r\n                        <Button variant=\"contained\" size=\"small\" style={{ margin: \"2px\", backgroundColor: \"#76ff03\" }} onClick={handleClick}>\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton component=\"span\" size=\"small\" style={{ margin: \"2px\" }} onClick={() => props.onCloseInputTask()}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default InputTask;","import { useEffect, useState } from 'react';\r\nimport { Button, Box, Grid, Paper, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport TaskItem from './../taskItem/index'\r\nimport APICaller from './../../../until/callAPI'\r\nimport InputTask from './../inputTask/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            width: theme.spacing(2),\r\n            height: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst ColumnItem = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [indexAddColumn, setIndex] = useState(-1);\r\n    const [reset, setReset] = useState(false);\r\n    useEffect(() => {\r\n        APICaller('columns/' + props.infor.value + \"/\" + props.boardID, 'GET', null).then(res => {\r\n            setTasks(res.data);\r\n        });\r\n    }, [reset, props]);\r\n\r\n    const handleClickAdd = (value) => {\r\n        if (value === indexAddColumn) {\r\n            setIndex(-1);\r\n        } else {\r\n            setIndex(value);\r\n        }\r\n    }\r\n\r\n    const handleCloseInputTask = () => {\r\n        setIndex(-1);\r\n    }\r\n\r\n    const handleResetData = () => {\r\n        setReset(!reset);\r\n    }\r\n\r\n    return (\r\n        <Grid item md={4} xs={12} >\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                    <Box className={classes.root}>\r\n                        <Paper variant=\"outlined\" square style={{ background: props.infor.color }} />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography align=\"center\" variant=\"h6\" style = {{margin: \"0px 8px\"}} >{props.infor.label}</Typography >\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Button variant=\"contained\" fullWidth={true} onClick={() => handleClickAdd(props.columnType)}><AddIcon /></Button>\r\n\r\n            {indexAddColumn === props.infor.value ?\r\n                <Box mt={2} mb={2} >\r\n                    <InputTask color={props.infor.color} value={props.infor.value} onCloseInputTask={handleCloseInputTask} onResetData={handleResetData} board={props.boardID} />\r\n                </Box> : \"\"}\r\n\r\n            {tasks.map((task, dex) => {\r\n                return (\r\n                    <Box mt={2} mb={2} key={dex}>\r\n                        <TaskItem taskInfor={task} background={props.infor.color} onResetData={handleResetData} />\r\n                    </Box>\r\n                )\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ColumnItem;\r\n","import { useEffect, useState } from 'react';\r\nimport { Grid, } from '@material-ui/core';\r\n\r\nimport ColumnItem from './../columnItem/index'\r\nimport APICaller from './../../../until/callAPI'\r\n\r\nconst ColumnList = (props) => {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    useEffect(() => {\r\n        APICaller('columns', 'GET', null).then(res => {\r\n            setColumns(res.data);\r\n        })\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing = {2}>\r\n            {columns.map(column => <ColumnItem infor={column} key = {column._id} boardID = {props.boardID} columnType = {column.value}/>)}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ColumnList;\r\n","import { Box } from '@material-ui/core';\r\nimport ColumnList from '../columnList/index'\r\n\r\nconst TaskList = (props) => {\r\n\r\n    return (\r\n        <Box style={{ margin: \"16px\" }}>\r\n            <ColumnList boardID={props.boardID} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TaskList;","import { useState, useEffect } from 'react';\r\nimport { Grid, Typography, IconButton, TextField, Button } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport callAPI from './../../../until/callAPI'\r\nconst BoardHeader = (props) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    useEffect(() => {\r\n        callAPI('boards/' + props.boardID, 'GET', null).then(res => {\r\n            setBoardName(res.data.name);\r\n            setText(res.data.name);\r\n        })\r\n    }, [props.boardID])\r\n\r\n    const handleOpenEditBoardName = () => {\r\n        setText(boardName);\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (text !== \"\")\r\n            callAPI('boards/edit/' + props.boardID, 'POST', { name: text }).then(res => {\r\n                setIsEdit(false)\r\n                setBoardName(text)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" style={{ backgroundColor: \"white\" }}>\r\n            <Grid item style={{ margin: \"8px 16px\" }}>\r\n                <Grid container>\r\n                    {isEdit ?\r\n                        <>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Board Name\"\r\n                                    placeholder=\"Board Name\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    style={{ margin: \"-4px 0px\" }}\r\n                                    value={text}\r\n                                    onChange={(event) => setText(event.target.value)}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" color=\"primary\" size=\"small\" style={{ margin: \"0px 20px\" }} onClick={handleClick}>\r\n                                    Save\r\n                            </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button size=\"small\" onClick={handleOpenEditBoardName}>Cancel</Button>\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\">{boardName}</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <IconButton component=\"span\" size=\"small\" style={{ margin: \"0px 8px\" }} onClick={handleOpenEditBoardName}>\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default BoardHeader;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport TaskList from './taskList/index'\r\nimport Header from './../../components/header/index'\r\nimport BoardHeader from './boardHeader/index'\r\n\r\nconst BoardDetail = (props) => {\r\n    const [id, setID] = useState(null);\r\n    useEffect(() => {\r\n        if (props.location) {\r\n            setID(new URLSearchParams(props.location.search).get('id'));\r\n        }\r\n    }, [props.location]);\r\n\r\n    return (\r\n        <div >\r\n            <Header />\r\n            {id !== null? <BoardHeader boardID = {id}/>: \"\"}\r\n            {id !== null? <TaskList boardID = {id}/>: \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardDetail;","export default __webpack_public_path__ + \"static/media/google.dbea7bf3.svg\";","import { useState, } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport google from './../../google.svg';\r\nimport callAPI from './../../until/callAPI'\r\nimport CustomizedSnackbars from './../../components/snackbar/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const [isLogin, setisLogin] = useState(false);\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [error, setError] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        setError(false);\r\n        callAPI('auth/login', 'POST', {\r\n            email: user.email,\r\n            password: user.password\r\n        }).then(res => {\r\n            localStorage.setItem('token', JSON.stringify(res.data.access_token));\r\n            setisLogin(true);\r\n        }).catch(err => {\r\n            setError(true);\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { target } = event;\r\n        const { name, value } = target;\r\n        console.log(name, value)\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    if (isLogin) return <Redirect to={process.env.PUBLIC_URL}></Redirect>\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\"  >\r\n            {props.location.state ? <CustomizedSnackbars open={props.location.state.open} type={props.location.state.type} message={props.location.state.message} /> : <></>}\r\n            {<CustomizedSnackbars open={error} type=\"error\" message=\"Wrong account or password\" /> }\r\n            <CssBaseline />\r\n            <div className={classes.paper} >\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={user.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={user.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to='#' variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleClick}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n\r\n\r\n                </form>\r\n\r\n                <Typography component=\"p\" variant=\"h6\">\r\n                    Or login with\r\n                </Typography>\r\n\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.button}\r\n                            startIcon={<FacebookIcon style={{ color: \"blue\" }} />}\r\n                            style={{ color: \"blue\" }}\r\n                        >\r\n                            Facebook\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.button}\r\n                            style={{ color: \"blue\" }}\r\n                        >\r\n                            <img src={google} alt=\"google\" style={{ margin: \"0px 8px 0px 0px\" }}></img>\r\n                            Facebook\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Link to={process.env.PUBLIC_URL + '/signup'} style={{ margin: \"24px 0px 0px 0px\", color: \"#3f51b5\" }}>\r\n                    {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n\r\n            </div>\r\n        </Container >\r\n\r\n    );\r\n}","import { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport callAPI from './../../until/callAPI'\r\nimport CustomizedSnackbars from './../../components/snackbar/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles();\r\n    const [success, setSuccess] = useState(false);\r\n    const [error, setError] = useState({\r\n        value: false,\r\n        message: \"\"\r\n    });\r\n    const [acount, setAcount] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        agreeTerm: false,\r\n    });\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { target } = event;\r\n        const { name } = target;\r\n        const value = name === \"agreeTerm\" ? target.checked : target.value;\r\n        setAcount({\r\n            ...acount,\r\n            [name]: value\r\n        });\r\n\r\n        if (error.value) {\r\n            setError({\r\n                value: false,\r\n                message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (acount.firstName === \"\" ||\r\n            acount.lastName === \"\" ||\r\n            acount.email === \"\" ||\r\n            acount.password === \"\" ||\r\n            acount.confirmPassword === \"\"\r\n        ) {\r\n            setError({\r\n                value: true,\r\n                message: \"You need to fill in all the details\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (acount.password.length < 8) {\r\n            setError({\r\n                value: true,\r\n                message: \"Your password should contain at least 8 chars\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!acount.agreeTerm) {\r\n            setError({\r\n                value: true,\r\n                message: \"You must agree with our Term\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (acount.password !== acount.confirmPassword) {\r\n            setError({\r\n                value: true,\r\n                message: \"Password and confirm password are identical\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        callAPI('users', 'POST', {\r\n            firstName: acount.firstName,\r\n            lastName: acount.lastName,\r\n            email: acount.email,\r\n            password: acount.password\r\n        }).then(res => {\r\n            if (res.data.id === null) {\r\n                setError({\r\n                    value: true,\r\n                    message: \"Account already exists!\"\r\n                });\r\n            }\r\n            else\r\n                setSuccess(true)\r\n        });\r\n    }\r\n\r\n    if (success) return <Redirect to={{\r\n        pathname: process.env.PUBLIC_URL + '/login',\r\n        state: {\r\n            type: 'success',\r\n            message: \"Successful registration, login now!\",\r\n            open: true\r\n        }\r\n    }} />\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {<CustomizedSnackbars open={error.value} type=\"error\" message={error.message} />}\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                onChange={handleChange}\r\n                                value={acount.firstName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleChange}\r\n                                value={acount.lastName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleChange}\r\n                                value={acount.email}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleChange}\r\n                                value={acount.password}\r\n                            />\r\n                            <p style={{ fontStyle: \"italic\", fontSize: \"80%\" }}> Should contain at least 8 chars, 1 number, 1 uppercase, 1 lowercase.</p>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleChange}\r\n                                value={acount.confirmPassword}\r\n                            />\r\n                            <p style={{ fontStyle: \"italic\", fontSize: \"80%\" }}> Should contain at least 8 chars, 1 number, 1 uppercase, 1 lowercase.</p>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox name=\"agreeTerm\" checked={acount.agreeTerm} onChange={handleChange} color=\"primary\" />}\r\n                                label=\"By signing up you agree to our Terms and Privacy Policy\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to={process.env.PUBLIC_URL + '/login'} style={{ margin: \"24px 0px 0px 0px\", color: \"#3f51b5\" }}>\r\n                                Already have an account? Sign in\r\n                             </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({user}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            \n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.firstName + \" \" + user.lastName}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {user.email}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\n\n\nexport default Profile;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n} from '@material-ui/core';\n\n\nconst ProfileDetails = ({user}) => {\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n\n    >\n      <Card>\n        <CardHeader\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                required\n                value={user.firstName}\n                variant=\"outlined\"\n                disabled = {true}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                required\n                value={user.lastName}\n                variant=\"outlined\"\n                disabled = {true}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                required\n                value={user.email}\n                variant=\"outlined\"\n                disabled = {true}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                type=\"number\"\n                value={user.phone}\n                variant=\"outlined\"\n                disabled = {true}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </form>\n  );\n};\n\n\nexport default ProfileDetails;\n","import React, { useState, useEffect } from 'react';\n\nimport APICaller from '../../../until/callAPI'\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nimport ConfirmDialog from './../../../components/confirmDialog/index'\nimport CustomizedSnackbars from './../../../components/snackbar/index'\n\nconst UpdateProfile = ({ user, onReset }) => {\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  });\n\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    setValues({\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone\n    })\n  }, [user]);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSuccess(false);\n    setIsSubmit(true);\n  }\n\n  const handleChoose = (value) => {\n    if (value) {\n      APICaller('users/edit/' + user._id, 'POST', values)\n        .then(res => {\n          setIsSubmit(false);\n          setSuccess(true);\n          onReset()\n        });\n    }\n    else {\n      setIsSubmit(false);\n    }\n  }\n  return (\n    <>\n      {isSubmit ? <ConfirmDialog title = \"Change Information\" content = \"Do you want to change these informations?\" onChoose = {handleChoose}/>: <></>}\n      {success ? <CustomizedSnackbars open={true} type =\"success\" message=\"successful change\"/>: <></>}\n      <form\n        autoComplete=\"off\"\n        noValidate\n      >\n        <Card>\n          <CardHeader\n            title=\"Update Information\"\n            subheader=\"The information can be edited\"\n\n          />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  helperText=\"Please specify the first name\"\n                  label=\"First name\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  required\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Last name\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  required\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Email Address\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  required\n                  value={values.email}\n                  variant=\"outlined\"\n                  disabled={true}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Phone Number\"\n                  name=\"phone\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  value={values.phone}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n          >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Save details\n          </Button>\n          </Box>\n        </Card>\n      </form>\n    </>\n  );\n};\n\nexport default UpdateProfile;\n","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n    Box,\r\n    Button\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport APICaller from '../../../until/callAPI'\r\nimport ConfirmDialog from './../../../components/confirmDialog/index'\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\n\r\nconst ChangePassword = ({ user }) => {\r\n    const [values, setValues] = useState({\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [error, setError] = useState({\r\n        value: false,\r\n        message: \"\"\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSuccess(false);\r\n        setIsSubmit(true);\r\n        setError({\r\n            value: false,\r\n            message: \"\"\r\n        });\r\n    }\r\n\r\n    const handleChoose = (value) => {\r\n        if (value) {\r\n            if(values.oldPassword === \"\"||values.confirmPassword === \"\"||values.newPassword === \"\")\r\n            {\r\n                setError({\r\n                    value: true,\r\n                    message: \"You need to fill in all the details\"\r\n                });\r\n                setIsSubmit(false);\r\n                return;\r\n            }\r\n\r\n            if(values.newPassword.length < 8){\r\n                setError({\r\n                    value: true,\r\n                    message: \"Your new password should contain at least 8 chars\"\r\n                });\r\n                setIsSubmit(false);\r\n                return;\r\n            }\r\n            if (values.newPassword !== values.confirmPassword) {\r\n                setError({\r\n                    value: true,\r\n                    message: \"Password and confirm password are identical\"\r\n                });\r\n                setIsSubmit(false);\r\n                return;\r\n            }\r\n\r\n            APICaller('users/change-password/' + user._id, 'POST', {\r\n                oldPassword: values.oldPassword,\r\n                newPassword: values.newPassword\r\n            }).then(res => {\r\n                if (res.data) {\r\n                    setSuccess(true);\r\n                    setIsSubmit(false);\r\n                } else {\r\n                    setError({\r\n                        value: true,\r\n                        message: \"Old password is invalid\"\r\n                    });\r\n                }\r\n            })\r\n\r\n            setIsSubmit(false);\r\n        }\r\n        else {\r\n            setIsSubmit(false);\r\n        }\r\n\r\n    }\r\n\r\n    if (success) return <Redirect to={{\r\n        pathname: process.env.PUBLIC_URL + '/login',\r\n        state: {\r\n            type: 'success',\r\n            message: \"Password changed successfully, please log in again!\",\r\n            open: true,\r\n        }\r\n    }} />\r\n\r\n\r\n    return (\r\n        <>\r\n            {isSubmit ? <ConfirmDialog title=\"Change Information\" content=\"Do you want to change these informations?\" onChoose={handleChoose} /> : <></>}\r\n            {error.value ? <CustomizedSnackbars open={true} type=\"error\" message={error.message} /> : <></>}\r\n\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n\r\n            >\r\n                <Card>\r\n                    <CardHeader\r\n                        title=\"Change Password\"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            spacing={3}\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    helperText=\"Should contain at least 8 chars, 1 number, 1 uppercase, 1 lowercase.\"\r\n                                    label=\"Old Password\"\r\n                                    name=\"oldPassword\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    value={values.oldPassword}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                            ></Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    helperText=\"Should contain at least 8 chars, 1 number, 1 uppercase, 1 lowercase.\"\r\n                                    label=\"New Password\"\r\n                                    name=\"newPassword\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    value={values.newPassword}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                            ></Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    helperText=\"Should contain at least 8 chars, 1 number, 1 uppercase, 1 lowercase.\"\r\n                                    label=\"Confirm Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    value={values.confirmPassword}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                            ></Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"flex-end\"\r\n                        p={2}\r\n                    >\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Save Password\r\n                </Button>\r\n                    </Box>\r\n                </Card>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default ChangePassword;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Tabs, Card, CardContent, Box } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\nexport default function VerticalTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        props.onChangeValue(newValue);\r\n    };\r\n\r\n    return (\r\n\r\n        <Box mt={5}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Tabs\r\n                        orientation=\"vertical\"\r\n                        value={value}\r\n                        variant=\"fullWidth\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"Vertical tabs example\"\r\n                        className={classes.tabs}\r\n                    >\r\n                        <Tab label=\"Profile\" maxwidth=\"true\" />\r\n                        <Tab label=\"Update Information\" maxwidth=\"true\" />\r\n                        <Tab label=\"Change Password\" maxwidth=\"true\" />\r\n                    </Tabs>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n\r\n\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  Box\n} from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\n\nimport Profile from './Profile/index';\nimport ProfileDetails from './ProfileDetail/index';\nimport UpdateProfile from './UpdateProfile/index'\nimport ChangePassword from './ChangePassword/index'\nimport VerticalTabs from './Tags/index'\nimport Header from './../../components/header'\nimport Authorization from './../../until/callAuth'\nimport APICaller from './../../until/callAPI';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Box\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <div>{children}</div>\n      )}\n    </Box>\n  );\n}\n\nconst Account = () => {\n  const [value, setValue] = useState(0);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isAuth, setIsAuth] = useState(false);\n  const [user, setUser] = useState(null);\n  const [reset, setReset] = useState(false);\n\n  useEffect(() => {\n    Authorization('profile', JSON.parse(localStorage.getItem('token')))\n      .then(res => {\n        APICaller('users/' + res.data.userId, 'GET', null).then(result => {\n          setUser(result.data);\n          setIsLogin(true);\n          setIsAuth(true);\n        })\n      })\n      .catch(err => { setIsLogin(false); setIsAuth(true) })\n  }, [reset]);\n\n  const handleChangeValue = (newValue) => {\n    setValue(newValue);\n  }\n\n  const handleReset = ()=>{\n    setReset(!reset);\n  }\n\n  if (!isAuth) return <></>;\n\n  if (!isLogin) return <Redirect to={{\n    pathname: process.env.PUBLIC_URL + '/login',\n    state: {\n      type: 'error',\n      message: \"You must login!\",\n      open: true\n    }\n  }} />\n\n  return (\n    <>\n      <Header />\n      <Container maxWidth=\"lg\" style={{ marginTop: \"48px\" }}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile user={user} />\n            <VerticalTabs onChangeValue={handleChangeValue} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n\n            <TabPanel value={value} index={0}>\n              <ProfileDetails user={user} />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <UpdateProfile user={user} onReset = {handleReset} />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              <ChangePassword user={user} />\n            </TabPanel>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Account;\n","import React from 'react';\r\nimport BoardPage from './pages/BoardPage/index';\r\nimport BoardDetail from './pages/BoardDetailPage/index'\r\nimport SignIn from './pages/LoginPage/index'\r\nimport SignUp from './pages/SignUpPage/index'\r\nimport Account from './pages/AccountView/index'\r\nconst routes = [\r\n    {\r\n        path: process.env.PUBLIC_URL + '/',\r\n        exact: true,\r\n        main: () => <BoardPage />\r\n    },\r\n    {\r\n        path: process.env.PUBLIC_URL + '/login',\r\n        exact: true,\r\n        main: ({ location }) => <SignIn location={location} />\r\n    },\r\n    {\r\n        path: process.env.PUBLIC_URL + '/signup',\r\n        exact: true,\r\n        main: () => <SignUp />\r\n    },\r\n    {\r\n        path: process.env.PUBLIC_URL + '/profile',\r\n        exact: true,\r\n        main: () => <Account />\r\n    },\r\n    {\r\n        path: process.env.PUBLIC_URL + '/boards',\r\n        exact: true,\r\n        main: ({ location }) => <BoardDetail location={location} />\r\n    },\r\n    {\r\n        path: '',\r\n        exact: false,\r\n        main: () => <BoardPage />\r\n    }\r\n]\r\n\r\nexport default routes;","import './App.css';\nimport routes from './routes';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst App = () => {\n\n  \n  const showContentMenus = (routes) => {\n    let result = null;\n\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return <Route key={index}\n          path={route.path}\n          exact={route.exact}\n          component={route.main} />\n      })\n    }\n\n    return result\n  }\n\n  return (\n    <Router>\n      <Switch>\n        {showContentMenus(routes)}\n      </Switch>\n    </Router>\n\n  );\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}